---
import MarkdownIt from 'markdown-it';
import { getCollection, getEntryBySlug } from "astro:content";
import Layout from "../../layouts/Layout.astro";

const { slug } = Astro.params;
const post = await getEntryBySlug("blog", slug);

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    return posts.map((post) => ({
        params: { slug: post.slug },
    }));
}

if (!post) {
    throw new Error(`Post not found: ${slug}`);
}

const md = new MarkdownIt('commonmark',{
    html: true
})
const result = md.render(post.body);
---

<Layout seo={
    {
        title: post.data.title,
        description: post.data.description
    }
} author={post.data.author} keywords={post.data.tags.join(', ')}>
    <section class="max-w-3xl mx-auto p-6 bg-gray-900 text-white rounded-lg shadow-lg">
        <a href="/#blog" class="text-blue-400 hover:underline mb-4 inline-block">‚Üê Back</a>
        <h1 class="text-4xl font-bold mb-4">{post.data.title}</h1>
        <p class="text-gray-400 text-sm mb-4">{post.data.author} | {post.data.date.toDateString()}</p>
        <div class="prose lg:prose-lg prose-invert" set:html={result} />
    </section>

    <script type="application/ld+json">
        {
            "@context": "https://schema.org",
            "@type": "BlogPosting",
            "headline": "{post.data.title}",
            "author": {
                "@type": "Person",
                "name": "{post.data.author}"
            },
            "publisher": {
                "@type": "Organization",
                "name": "Kavi Castelo Portfolio"
            },
            "datePublished": "{post.data.date.toISOString()}",
            "url": "https://kavicastelo-dev.netlify.app/blogs/{slug}"
        }
    </script>

</Layout>
